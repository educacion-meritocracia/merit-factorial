---
pagetitle: "SEM 2025"
Author: Equipo EDUMER
bibliography: "../input/bib/merit-factorial.bib"
csl: "../input/bib/apa6.csl"
lang: es
knitr:
  opts_chunk:
    collapse: true
    comment: "#>"
    R.options:
      
      knitr.graphics.auto_pdf: true
format:
  revealjs:
    #logo: images/edumer.png
    slide-number: true
    theme: "libs/edumer.scss"
    auto-stretch: false
    title-slide-attributes:
      visibility: false
    transition: fade
    transition-speed: slow
# data-background-image: images/cover.jpg
# data-background-size: cover
    auto-play-media: true
    mathjax: "default"
  pdf:
    format: beamer 
    keep-tex: true  # Debug LaTeX output if needed
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: setup
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = F,
                      warning = F,
                      error = F, 
                      message = F) 

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
```

```{r}
#| label: packages
#| include: false

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               sjmisc, 
               sjPlot,
               here,
               lavaan,
               psych,
               corrplot,
               ggdist,
               patchwork,
               sjlabelled,
               semTools,
               gtools,
               RColorBrewer,
               skimr,
               readxl)


options(scipen=999)
rm(list = ls())
```


```{r}
#| label: data
#| include: false
#| echo: false

load(file = here("output", "data", "db1_proc.RData"))
load(file = here("output", "data", "db_long_proc.RData"))

```


::: columns
::: {.column width="35%"}


![](logo_isuc.png)


:::

::: {.column .column-right width="65%"}

## **Estabilidad y comparabilidad de las creencias meritocráticas en estudiantes en edad escolar: un enfoque de invarianza longitudinal**

------------------------------------------------------------------------

**Andreas Laffert & Tomás Urzúa**


::: {.red2 .medium}


**Instituto de Sociología, Pontificia Universidad Católica de Chile**

**SEM (SOL-3067)**

**Prof. Felipe Sánchez**

:::

22 Junio 2025

:::
:::

::: {.notes}
Aquí mis notas
:::


# Contexto y motivación {data-background-color="#5f5758"}

# Contexto y motivación 

::: {.columns}

::: {.column width="20%"}

![](images/edumer.png)

:::

::: {.column width="80%"}
::: {.incremental .highlight-last style="font-size: 110%;"}
- ANID/FONDECYT N°1210847 2021-2024 - Meritocracia en la escuela: Fundamentos morales del mercado educativo y sus implicancias para la formación ciudadana en Chile.

- Primera etapa:
  * Estudio cualitativo
  * Análisis de datos secundarios
 
- Segunda etapa:
  * Encuesta panel: dos olas estudiantes y apoderados
  * Experimentos de encuestas
  
- Más información: [jc-castillo.com/project/fondecyt-edumer/](jc-castillo.com/project/fondecyt-edumer/)

:::
:::
:::


## Meritocracia  

::: {.incremental .highlight-last style="font-size: 120%;"}

- A pesar del aumento de la desigualdad económica y la limitada movilidad social, las creencias meritocráticas siguen siendo notablemente estables entre los ciudadanos [@mijs_paradox_2019]

- Meritocracia: _sistema_ distributivo basado en el mérito (esfuerzo + talento) [@young_rise_1958]

- Agenda de investigación sobre meritocracia: 

     -  El funcionamiento y promesa inherente de la meritocracia [@mijs_unfulfillable_2016; @reynolds_perceptions_2014]
     - Justificación y legitimación de disparidades económicas y sociales [@sandel_tyranny_2020; @mijs_paradox_2019; @bucca_merit_2016]

:::


## Meritocracia en la escuela


::: {.incremental .highlight-last style="font-size: 120%;"}

- Investigaciones sobre meritocracia en la escuela [e.g. @batruch_belief_2022; @wiederkehr_belief_2015; @darnon_where_2018], dado que: 

    - Instituciones educativas han sido fundamentales en la promoción de ideales meritocráticos [@dubet_repensar_2011]

    - Alta reproducción de las desigualdades en las escuelas [@bourdieu_reproduction_1990; @duru-bellat_who_2012]

- Las creencias meritocráticas a nivel escolar se asocian con una mayor justificación de las desigualdades sociales [@batruch_belief_2022]

:::


## Medición de meritocracia


::: {.incremental .highlight-last style="font-size: 115%;"}

- Sin embargo, **los conceptos e instrumentos para medir meritocracia** varían sustantivamente en la literatura

- Castillo et al. [-@castillo_multidimensional_2023] proponen un marco conceptual y de medición minimalista para meritocracia en contextos de encuestas. 


```{r}
#| label: fig-concep
#| fig-cap-location: top
#| fig-cap: "Modelo conceptual de Castillo et al. (2023)"
#| fig-align: center
#| fig-width: 8.5
#| out-width: '100%'


knitr::include_graphics(path = here("sem/images/modelo_con.png"))

```


::: 


## Modelo

::: {style="font-size: 120%;"}

```{r}
#| fig-align: center
#| fig-asp: 1.1
#| fig-width: 15
#| out-width: '150%'


knitr::include_graphics(path = here("sem/images/hipo5.png"))

```


::: 

# Este estudio {data-background-color="#5f5758"}



::: {.incremental style="font-size: 200%; display: flex; justify-content: center; align-items: center"}
</br>

**<span style="color:darkorange">Evaluar la estructura interna y la estabilidad de la medición de la escala de meritocracia en una muestra escolar en Chile**</font>


:::


# Datos, variables y métodos {data-background-color="#5f5758"}

## Datos

::: {.incremental .highlight-last style="font-size: 120%;"}

- [Encuesta Panel Educación y Meritocracia (EDUMER)](https://github.com/educacion-meritocracia/edumer-data) en sus olas de 2023 y 2024 para estudiantes.

- Aplicación de entrevistas CAWI a estudiantes de primaria y secundaria provenientes de 9 escuelas de la región Metropolitana y Valparaíso de Chile.

- Muestra no probabilística.

    - Pimera ola incluyó a 839 estudiantes (411 mujeres, 446 hombres y 45 que se identificaron como otros; $\bar{X}_{edad}$ = 13.1, $SD_{edad}$ = 1.6).
    - Segunda ola siguió a 612 de ellos (309 mujeres, 343 hombres y 22 que se identificaron como otros; $\bar{X}_{edad}$ = 14.1, $SD_{edad}$ = 1.6).


:::

## Variables
::: {.incremental .highlight-last style="font-size: 120%;"}


**<span style="color:darkorange">Escala de percepciones y preferencias sobre meritocracia**</font>

- Las variables incluidas en el modelo de medición se operacionalizan según los ítems propuestos por Castillo et al. [-@castillo_multidimensional_2023].

- Escala de dos componentes, cuatro dimensiones y 8 ítems (2 x dimensión).

- Cada ítem se contestó en una escala Likert de cuatro puntos que va desde “muy en desacuerdo” (1) hasta “muy de acuerdo” (4).

::: 

## Variables

::: {style="font-size: 110%;"}

```{r}
#| label: fig-vars-ppms
#| fig-cap-location: top
#| fig-cap: "Items de Escala de Percepciones y Preferencias sobre Meritocracia"
#| fig-align: center
#| fig-width: 8
#| out-width: '200%'


knitr::include_graphics(path = here("sem/images/tab_items.png"))

```
::: 


## Variables

::: {style="font-size: 110%;"}

```{r}
#| label: fig-likerplot
#| fig-align: center
#| fig-cap: "Distribución de respuestas en escala de percepciones y preferencias sobre meritocracia (PPMS)"
#| fig-cap-location: top
#| fig-width: 7
#| out-width: '80%'

theme_set(theme_ggdist())
colors <- RColorBrewer::brewer.pal(n = 4, name = "RdBu")

a <- db1 %>% 
  select(starts_with("perc")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("a. Percepciones"),
                      geom.size = 0.8,
                      axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
                      ) +
  ggplot2::theme(legend.position = "none")

b <- db1 %>% 
  select(starts_with("pref")) %>% 
  sjPlot::plot_likert(geom.colors = colors,
                      title = c("b. Preferencias"),
                      geom.size = 0.8,
                     axis.labels = c("Esfuerzo", "Talento", "Padres ricos", "Contactos"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "bottom")

likerplot <- a / b + plot_annotation(caption = paste0("Fuente: Elaboración propia en base a Encuesta Panel EDUMER Ola 1"," (n = ",dim(db1)[1],")"
))

likerplot
```
::: 


## Métodos

::: {.incremental .highlight-last style="font-size: 110%;"}

1. Análisis Factorial Confirmatorio (CFA) en base a un modelo de cuatro factores latentes [@castillo_multidimensional_2023], con estimador Diagonal Weighted Least Squares (DWLS) debido al nivel ordinal de los ítems [@kline_principles_2023]

    - Cuttof de ajuste [@brown_confirmatory_2015]: $\text{CFI o TLI} > 0.95;RMSEA< 0.06$

2. Invarianza longitudinal con cuatro módelos jerárquicos [@liu_testing_2017]: 
    
    - Configural (misma estructura factorial)
    - Débil (+ mismas cargas factoriales)
    - Fuerte (+ mismos interceptos)
    - Estricto (+ mismas varianzas de error)
    - Cuttof de ajuste [@chen_sensitivity_2007]: $\Delta \text{CFI} \geq -0.010; \Delta \text{RMSEA} \geq 0.015$
    
:::

# Resultados {data-background-color="#5f5758"}

## Correlaciones

::: {style="font-size: 120%;"}

```{r}
#| label: fig-matriz
#| fig-cap: "Matriz de correlaciones Ola 1"
#| fig-cap-location: top
#| fig-align: center
#| fig-width: 7
#| out-width: '80%'

M <- psych::polychoric(db1[c(2:9)])

P <- cor(db1[c(2:9)], method = "spearman")

diag(M$rho) <- NA

diag(P) <- NA

rownames(M$rho) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencia Esfuerzo",
                     "F. Preferencia Talento",
                     "G. Preferencia Padres Ricos",
                     "H. Preferencia Contactos")

#set Column names of the matrix
colnames(M$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                       "(H)")

rownames(P) <- c("A. Percepción Esfuerzo",
                     "B. Percepción Talento",
                     "C. Percepción Padres Ricos",
                     "D. Percepción Contactos",
                     "E. Preferencia Esfuerzo",
                     "F. Preferencia Talento",
                     "G. Preferencia Padres Ricos",
                     "H. Preferencia Contactos")

#set Column names of the matrix
colnames(P) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                    "(H)")

testp <- cor.mtest(M$rho, conf.level = 0.95)

#Plot the matrix using corrplot
 corrplot::corrplot(M$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
                   bg = "white",
                   na.label = "-")


```
:::

## Análisis Factorial Confirmatorio

:::: { .incremental style="font-size: 120%;"}

```{r}
#| label: fig-cfa
#| fig-cap: "Análisis factorial confirmatorio de PPMS en población escolar Chile Ola 1"
#| fig-cap-location: top
#| fig-align: center
#| fig-width: 7
#| out-width: '100%'

knitr::include_graphics(path = here("sem/cfa_w1.png"))
```


::::

## Análisis Factorial Confirmatorio

:::: { .incremental style="font-size: 120%;"}

```{r}
#| label: fig-cfa2
#| fig-cap: "Análisis factorial confirmatorio de PPMS en población escolar Chile Ola 2"
#| fig-cap-location: top
#| fig-align: center
#| fig-width: 7
#| out-width: '100%'

knitr::include_graphics(path = here("sem/cfa_w2.png"))
```


::::

## Invarianza longitudinal

:::: { .incremental style="font-size: 120%;"}


```{r}

load(file = here("output", "data", "db_long_proc.RData"))


db_invariance <-
  db_long %>%
  select(id_estudiante, ola, starts_with(c("perc", "pref"))) %>%
  pivot_wider(
    id_cols = id_estudiante,
    names_from = ola,
    names_glue = "{.value}{ola}",
    values_from = c(
      perc_effort, perc_talent,
      perc_rich_parents, perc_contact,
      pref_effort, pref_talent,
      pref_rich_parents, pref_contact
    )
  ) %>%
  na.omit() %>%
  rename_with(~ str_replace_all(., "_", ""))


db_invariance <- db_invariance %>% 
  mutate(
    across(
      .cols = -idestudiante,
      .fns = ~ case_when(. == 1 ~ 0,
                         . == 2 ~ 1,
                         . == 3 ~ 2,
                         . == 4 ~ 3)
    )
  )

db_invariance <- db_invariance %>% 
  mutate(
    across(
      .cols = -idestudiante,
      .fns = ~ ordered(.)
    )
  ) 

baseline_model_smt <- ('
# Definición de factores

percmerit1  =~ 1*perceffort1 + 1*perctalent1
percmerit2  =~ 1*perceffort2 + 1*perctalent2

percnmerit1 =~ 1*percrichparents1 + 1*perccontact1
percnmerit2 =~ 1*percrichparents2 + 1*perccontact2

prefmerit1  =~ 1*prefeffort1 + 1*preftalent1
prefmerit2  =~ 1*prefeffort2 + 1*preftalent2

prefnmerit1 =~ 1*prefrichparents1 + 1*prefcontact1
prefnmerit2 =~ 1*prefrichparents2 + 1*prefcontact2

# Varianzas y covarianzas latentes

percmerit1  ~~ percmerit1 + percmerit2
percmerit2  ~~ percmerit2

percnmerit1 ~~ percnmerit1 + percnmerit2
percnmerit2 ~~ percnmerit2

prefmerit1  ~~ prefmerit1 + prefmerit2
prefmerit2  ~~ prefmerit2

prefnmerit1 ~~ prefnmerit1 + prefnmerit2
prefnmerit2 ~~ prefnmerit2

# Medias latentes (identificación)

percmerit1  ~ 0*1
percmerit2  ~ 1

percnmerit1 ~ 0*1
percnmerit2 ~ 1

prefmerit1  ~ 0*1
prefmerit2  ~ 1

prefnmerit1 ~ 0*1
prefnmerit2 ~ 1

# Umbrales (uno igualado por ítem)

perceffort1     | pe1t1*t1 + pe1t2*t2
perceffort2     | pe2t1*t1 + pe2t2*t2

perctalent1     | pt1t1*t1 + pt1t2*t2
perctalent2     | pt2t1*t1 + pt2t2*t2

percrichparents1| prp1t1*t1 + prp1t2*t2
percrichparents2| prp2t1*t1 + prp2t2*t2

perccontact1    | pc1t1*t1 + pc1t2*t2
perccontact2    | pc2t1*t1 + pc2t2*t2

prefeffort1     | pre1t1*t1 + pre1t2*t2
prefeffort2     | pre2t1*t1 + pre2t2*t2

preftalent1     | prt1t1*t1 + prt1t2*t2
preftalent2     | prt2t1*t1 + prt2t2*t2

prefrichparents1| pfrp1t1*t1 + pfrp1t2*t2
prefrichparents2| pfrp2t1*t1 + pfrp2t2*t2

prefcontact1    | pfc1t1*t1 + pfc1t2*t2
prefcontact2    | pfc2t1*t1 + pfc2t2*t2

# Interceptos fijos a 0 (por identificación con umbrales)

perceffort1 + perctalent1 ~ 0*1
perceffort2 + perctalent2 ~ 0*1

percrichparents1 + perccontact1 ~ 0*1
percrichparents2 + perccontact2 ~ 0*1

prefeffort1 + preftalent1 ~ 0*1
prefeffort2 + preftalent2 ~ 0*1

prefrichparents1 + prefcontact1 ~ 0*1
prefrichparents2 + prefcontact2 ~ 0*1

# Varianzas únicas
# Fijas a 1 en ola 1, libres en ola 2

perceffort1 ~~ 1*perceffort1
perctalent1 ~~ 1*perctalent1
percrichparents1 ~~ 1*percrichparents1
perccontact1 ~~ 1*perccontact1
prefeffort1 ~~ 1*prefeffort1
preftalent1 ~~ 1*preftalent1
prefrichparents1 ~~ 1*prefrichparents1
prefcontact1 ~~ 1*prefcontact1

perceffort2 ~~ NA*perceffort2
perctalent2 ~~ NA*perctalent2
percrichparents2 ~~ NA*percrichparents2
perccontact2 ~~ NA*perccontact2
prefeffort2 ~~ NA*prefeffort2
preftalent2 ~~ NA*preftalent2
prefrichparents2 ~~ NA*prefrichparents2
prefcontact2 ~~ NA*prefcontact2

# Covarianzas entre errores (misma variable, diferentes tiempos)

perceffort1 ~~ perceffort2
perctalent1 ~~ perctalent2

percrichparents1 ~~ percrichparents2
perccontact1 ~~ perccontact2

prefeffort1 ~~ prefeffort2
preftalent1 ~~ preftalent2

prefrichparents1 ~~ prefrichparents2
prefcontact1 ~~ prefcontact2
')

# Estimación del modelo
fit_baseline <- cfa(baseline_model_smt, data = db_invariance,
                    ordered = c("perceffort1", "perctalent1", "perceffort2", "perctalent2",
                                "percrichparents1", "perccontact1", "percrichparents2", "perccontact2",
                                "prefeffort1", "preftalent1", "prefeffort2", "preftalent2",
                                "prefrichparents1", "prefcontact1", "prefrichparents2", "prefcontact2"),
                    parameterization = "theta",
                    estimator = "WLSMV")


loadinginv_model_smt <- ('

# Igualación de cargas (invarianza débil)

percmerit1  =~ 1*perceffort1 + pe_loading*perctalent1
percmerit2  =~ 1*perceffort2 + pe_loading*perctalent2

percnmerit1 =~ 1*percrichparents1 + prc_loading*perccontact1
percnmerit2 =~ 1*percrichparents2 + prc_loading*perccontact2

prefmerit1  =~ 1*prefeffort1 + pfe_loading*preftalent1
prefmerit2  =~ 1*prefeffort2 + pfe_loading*preftalent2

prefnmerit1 =~ 1*prefrichparents1 + pfrc_loading*prefcontact1
prefnmerit2 =~ 1*prefrichparents2 + pfrc_loading*prefcontact2


# Varianzas y covarianzas latentes

percmerit1  ~~ percmerit1 + percmerit2
percmerit2  ~~ percmerit2
percnmerit1 ~~ percnmerit1 + percnmerit2
percnmerit2 ~~ percnmerit2
prefmerit1  ~~ prefmerit1 + prefmerit2
prefmerit2  ~~ prefmerit2
prefnmerit1 ~~ prefnmerit1 + prefnmerit2
prefnmerit2 ~~ prefnmerit2


# Medias latentes

percmerit1  ~ 0*1
percmerit2  ~ 1
percnmerit1 ~ 0*1
percnmerit2 ~ 1
prefmerit1  ~ 0*1
prefmerit2  ~ 1
prefnmerit1 ~ 0*1
prefnmerit2 ~ 1


# Umbrales (uno igualado por ítem)

perceffort1 | pe1t1*t1 + pe1t2*t2
perceffort2 | pe2t1*t1 + pe2t2*t2
perctalent1 | pt1t1*t1 + pt1t2*t2
perctalent2 | pt2t1*t1 + pt2t2*t2
percrichparents1 | prp1t1*t1 + prp1t2*t2
percrichparents2 | prp2t1*t1 + prp2t2*t2
perccontact1 | pc1t1*t1 + pc1t2*t2
perccontact2 | pc2t1*t1 + pc2t2*t2
prefeffort1 | pre1t1*t1 + pre1t2*t2
prefeffort2 | pre2t1*t1 + pre2t2*t2
preftalent1 | prt1t1*t1 + prt1t2*t2
preftalent2 | prt2t1*t1 + prt2t2*t2
prefrichparents1 | pfrp1t1*t1 + pfrp1t2*t2
prefrichparents2 | pfrp2t1*t1 + pfrp2t2*t2
prefcontact1 | pfc1t1*t1 + pfc1t2*t2
prefcontact2 | pfc2t1*t1 + pfc2t2*t2


# Interceptos

perceffort1 + perctalent1 ~ 0*1
perceffort2 + perctalent2 ~ 0*1
percrichparents1 + perccontact1 ~ 0*1
percrichparents2 + perccontact2 ~ 0*1
prefeffort1 + preftalent1 ~ 0*1
prefeffort2 + preftalent2 ~ 0*1
prefrichparents1 + prefcontact1 ~ 0*1
prefrichparents2 + prefcontact2 ~ 0*1


# Varianzas únicas

perceffort1 ~~ 1*perceffort1
perctalent1 ~~ 1*perctalent1
percrichparents1 ~~ 1*percrichparents1
perccontact1 ~~ 1*perccontact1
prefeffort1 ~~ 1*prefeffort1
preftalent1 ~~ 1*preftalent1
prefrichparents1 ~~ 1*prefrichparents1
prefcontact1 ~~ 1*prefcontact1

perceffort2 ~~ NA*perceffort2
perctalent2 ~~ NA*perctalent2
percrichparents2 ~~ NA*percrichparents2
perccontact2 ~~ NA*perccontact2
prefeffort2 ~~ NA*prefeffort2
preftalent2 ~~ NA*preftalent2
prefrichparents2 ~~ NA*prefrichparents2
prefcontact2 ~~ NA*prefcontact2


# Covarianzas entre errores

perceffort1 ~~ perceffort2
perctalent1 ~~ perctalent2
percrichparents1 ~~ percrichparents2
perccontact1 ~~ perccontact2
prefeffort1 ~~ prefeffort2
preftalent1 ~~ preftalent2
prefrichparents1 ~~ prefrichparents2
prefcontact1 ~~ prefcontact2
')


fit_loadinginv <- cfa(loadinginv_model_smt, data = db_invariance,
                      ordered = c("perceffort1", "perctalent1", "perceffort2", "perctalent2",
                                  "percrichparents1", "perccontact1", "percrichparents2", "perccontact2",
                                  "prefeffort1", "preftalent1", "prefeffort2", "preftalent2",
                                  "prefrichparents1", "prefcontact1", "prefrichparents2", "prefcontact2"),
                      parameterization = "theta",
                      estimator = "WLSMV")



thresholdinv_model_smt <- ('

# Igualación de cargas (como en el modelo débil)

percmerit1  =~ 1*perceffort1 + pe_loading*perctalent1
percmerit2  =~ 1*perceffort2 + pe_loading*perctalent2

percnmerit1 =~ 1*percrichparents1 + prc_loading*perccontact1
percnmerit2 =~ 1*percrichparents2 + prc_loading*perccontact2

prefmerit1  =~ 1*prefeffort1 + pfe_loading*preftalent1
prefmerit2  =~ 1*prefeffort2 + pfe_loading*preftalent2

prefnmerit1 =~ 1*prefrichparents1 + pfrc_loading*prefcontact1
prefnmerit2 =~ 1*prefrichparents2 + pfrc_loading*prefcontact2


# Varianzas y covarianzas latentes

percmerit1  ~~ percmerit1 + percmerit2
percmerit2  ~~ percmerit2
percnmerit1 ~~ percnmerit1 + percnmerit2
percnmerit2 ~~ percnmerit2
prefmerit1  ~~ prefmerit1 + prefmerit2
prefmerit2  ~~ prefmerit2
prefnmerit1 ~~ prefnmerit1 + prefnmerit2
prefnmerit2 ~~ prefnmerit2


# Medias latentes

percmerit1  ~ 0*1
percmerit2  ~ 1
percnmerit1 ~ 0*1
percnmerit2 ~ 1
prefmerit1  ~ 0*1
prefmerit2  ~ 1
prefnmerit1 ~ 0*1
prefnmerit2 ~ 1


# Thresholds iguales entre olas (invarianza fuerte)

perceffort1     | pe_t1*t1 + pe_t2*t2
perceffort2     | pe_t1*t1 + pe_t2*t2
perctalent1     | pt_t1*t1 + pt_t2*t2
perctalent2     | pt_t1*t1 + pt_t2*t2
percrichparents1| prp_t1*t1 + prp_t2*t2
percrichparents2| prp_t1*t1 + prp_t2*t2
perccontact1    | pc_t1*t1 + pc_t2*t2
perccontact2    | pc_t1*t1 + pc_t2*t2
prefeffort1     | pre_t1*t1 + pre_t2*t2
prefeffort2     | pre_t1*t1 + pre_t2*t2
preftalent1     | prt_t1*t1 + prt_t2*t2
preftalent2     | prt_t1*t1 + prt_t2*t2
prefrichparents1| pfrp_t1*t1 + pfrp_t2*t2
prefrichparents2| pfrp_t1*t1 + pfrp_t2*t2
prefcontact1    | pfc_t1*t1 + pfc_t2*t2
prefcontact2    | pfc_t1*t1 + pfc_t2*t2


# Interceptos fijos

perceffort1 + perctalent1 ~ 0*1
perceffort2 + perctalent2 ~ 0*1
percrichparents1 + perccontact1 ~ 0*1
percrichparents2 + perccontact2 ~ 0*1
prefeffort1 + preftalent1 ~ 0*1
prefeffort2 + preftalent2 ~ 0*1
prefrichparents1 + prefcontact1 ~ 0*1
prefrichparents2 + prefcontact2 ~ 0*1


# Varianzas únicas

perceffort1 ~~ 1*perceffort1
perctalent1 ~~ 1*perctalent1
percrichparents1 ~~ 1*percrichparents1
perccontact1 ~~ 1*perccontact1
prefeffort1 ~~ 1*prefeffort1
preftalent1 ~~ 1*preftalent1
prefrichparents1 ~~ 1*prefrichparents1
prefcontact1 ~~ 1*prefcontact1

perceffort2 ~~ NA*perceffort2
perctalent2 ~~ NA*perctalent2
percrichparents2 ~~ NA*percrichparents2
perccontact2 ~~ NA*perccontact2
prefeffort2 ~~ NA*prefeffort2
preftalent2 ~~ NA*preftalent2
prefrichparents2 ~~ NA*prefrichparents2
prefcontact2 ~~ NA*prefcontact2


# Covarianzas entre errores longitudinales

perceffort1 ~~ perceffort2
perctalent1 ~~ perctalent2
percrichparents1 ~~ percrichparents2
perccontact1 ~~ perccontact2
prefeffort1 ~~ prefeffort2
preftalent1 ~~ preftalent2
prefrichparents1 ~~ prefrichparents2
prefcontact1 ~~ prefcontact2
')

fit_thresholdinv <- cfa(thresholdinv_model_smt, data = db_invariance,
                        ordered = c("perceffort1", "perctalent1", "perceffort2", "perctalent2",
                                    "percrichparents1", "perccontact1", "percrichparents2", "perccontact2",
                                    "prefeffort1", "preftalent1", "prefeffort2", "preftalent2",
                                    "prefrichparents1", "prefcontact1", "prefrichparents2", "prefcontact2"),
                        parameterization = "theta",
                        estimator = "WLSMV")


uniquenessinv_model_smt <- ('

# Cargas factoriales (invarianza débil)

percmerit1  =~ 1*perceffort1 + pe_loading*perctalent1
percmerit2  =~ 1*perceffort2 + pe_loading*perctalent2

percnmerit1 =~ 1*percrichparents1 + prc_loading*perccontact1
percnmerit2 =~ 1*percrichparents2 + prc_loading*perccontact2

prefmerit1  =~ 1*prefeffort1 + pfe_loading*preftalent1
prefmerit2  =~ 1*prefeffort2 + pfe_loading*preftalent2

prefnmerit1 =~ 1*prefrichparents1 + pfrc_loading*prefcontact1
prefnmerit2 =~ 1*prefrichparents2 + pfrc_loading*prefcontact2


# Varianzas y covarianzas de factores latentes

percmerit1  ~~ percmerit1 + percmerit2
percmerit2  ~~ percmerit2
percnmerit1 ~~ percnmerit1 + percnmerit2
percnmerit2 ~~ percnmerit2
prefmerit1  ~~ prefmerit1 + prefmerit2
prefmerit2  ~~ prefmerit2
prefnmerit1 ~~ prefnmerit1 + prefnmerit2
prefnmerit2 ~~ prefnmerit2


# Medias latentes

percmerit1  ~ 0*1
percmerit2  ~ 1
percnmerit1 ~ 0*1
percnmerit2 ~ 1
prefmerit1  ~ 0*1
prefmerit2  ~ 1
prefnmerit1 ~ 0*1
prefnmerit2 ~ 1


# Umbrales (invarianza fuerte)

perceffort1     | pe_t1*t1 + pe_t2*t2
perceffort2     | pe_t1*t1 + pe_t2*t2
perctalent1     | pt_t1*t1 + pt_t2*t2
perctalent2     | pt_t1*t1 + pt_t2*t2
percrichparents1| prp_t1*t1 + prp_t2*t2
percrichparents2| prp_t1*t1 + prp_t2*t2
perccontact1    | pc_t1*t1 + pc_t2*t2
perccontact2    | pc_t1*t1 + pc_t2*t2
prefeffort1     | pre_t1*t1 + pre_t2*t2
prefeffort2     | pre_t1*t1 + pre_t2*t2
preftalent1     | prt_t1*t1 + prt_t2*t2
preftalent2     | prt_t1*t1 + prt_t2*t2
prefrichparents1| pfrp_t1*t1 + pfrp_t2*t2
prefrichparents2| pfrp_t1*t1 + pfrp_t2*t2
prefcontact1    | pfc_t1*t1 + pfc_t2*t2
prefcontact2    | pfc_t1*t1 + pfc_t2*t2


# Interceptos fijos

perceffort1 + perctalent1 ~ 0*1
perceffort2 + perctalent2 ~ 0*1
percrichparents1 + perccontact1 ~ 0*1
percrichparents2 + perccontact2 ~ 0*1
prefeffort1 + preftalent1 ~ 0*1
prefeffort2 + preftalent2 ~ 0*1
prefrichparents1 + prefcontact1 ~ 0*1
prefrichparents2 + prefcontact2 ~ 0*1


# Varianzas únicas (invarianza estricta)
# Fijadas a 1 en todas las olas

perceffort1 ~~ 1*perceffort1
perceffort2 ~~ 1*perceffort2
perctalent1 ~~ 1*perctalent1
perctalent2 ~~ 1*perctalent2

percrichparents1 ~~ 1*percrichparents1
percrichparents2 ~~ 1*percrichparents2
perccontact1 ~~ 1*perccontact1
perccontact2 ~~ 1*perccontact2

prefeffort1 ~~ 1*prefeffort1
prefeffort2 ~~ 1*prefeffort2
preftalent1 ~~ 1*preftalent1
preftalent2 ~~ 1*preftalent2

prefrichparents1 ~~ 1*prefrichparents1
prefrichparents2 ~~ 1*prefrichparents2
prefcontact1 ~~ 1*prefcontact1
prefcontact2 ~~ 1*prefcontact2


# Covarianzas entre errores (mismo ítem, diferente ola)

perceffort1 ~~ perceffort2
perctalent1 ~~ perctalent2
percrichparents1 ~~ percrichparents2
perccontact1 ~~ perccontact2
prefeffort1 ~~ prefeffort2
preftalent1 ~~ preftalent2
prefrichparents1 ~~ prefrichparents2
prefcontact1 ~~ prefcontact2
')

fit_uniquenessinv <- cfa(uniquenessinv_model_smt, data = db_invariance,
                         ordered = c("perceffort1", "perctalent1", "perceffort2", "perctalent2",
                                     "percrichparents1", "perccontact1", "percrichparents2", "perccontact2",
                                     "prefeffort1", "preftalent1", "prefeffort2", "preftalent2",
                                     "prefrichparents1", "prefcontact1", "prefrichparents2", "prefcontact2"),
                         parameterization = "theta",
                         estimator = "WLSMV")

# Compare fit

an1 <- anova(fit_baseline, fit_loadinginv)
an2 <- anova(fit_loadinginv, fit_thresholdinv)
an3 <- anova(fit_thresholdinv, fit_uniquenessinv)

tab01 <- bind_rows(
  as_tibble(an1)[2,],
  as_tibble(an2)[2,],
  as_tibble(an3)[2,]
) %>%
  select("Chisq", "Df", chisq_diff = `Chisq diff`, df_diff = `Df diff`, pvalue = `Pr(>Chisq)`) %>%
  mutate(
    stars = stars.pval(pvalue),
    chisqt = paste0(round(Chisq, 2), " (", Df, ")"),
    decision = ifelse(pvalue > 0.05, "Accept", "Reject"),
    model = c("Weak", "Strong", "Strict")
  ) %>%
  bind_rows(
    tibble(Chisq = an1$Chisq[1], Df = an1$Df[1], chisq_diff = NA, df_diff = NA,
           pvalue = NA, stars = "", chisqt = paste0(round(an1$Chisq[1], 2), " (", an1$Df[1], ")"),
           decision = "Reference", model = "Configural")
  ) %>%
  select(model, chisqt, chisq_diff, df_diff, pvalue, stars, decision) %>%
  mutate(model = factor(model, levels = c("Configural", "Weak", "Strong", "Strict"))) %>%
  arrange(model)


fit.meas <- dplyr::bind_rows(lavaan::fitmeasures(fit_baseline, output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
                             lavaan::fitmeasures(fit_loadinginv,  output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
                             lavaan::fitmeasures(fit_thresholdinv, output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),],
                             lavaan::fitmeasures(fit_uniquenessinv, output ="matrix")[c("chisq","df","cfi","rmsea","rmsea.ci.lower","rmsea.ci.upper"),])

fit.meas <- fit.meas %>%
  dplyr::mutate(diff.chi2 = chisq    - lag(chisq,default = dplyr::first(chisq)),
                diff.df   = df       - lag(df,   default = dplyr::first(df)),
                diff.cfi  = cfi      - lag(cfi,  default = dplyr::first(cfi)),
                diff.rmsea   = rmsea - lag(rmsea,default = dplyr::first(rmsea))) %>%
  round(3) %>%
  dplyr::mutate(rmsea.ci=paste0(rmsea," \n ", "(",rmsea.ci.lower,"-",rmsea.ci.upper,")"))

tab.inv <- dplyr::bind_cols(tab01,fit.meas) %>%
  dplyr::select(model,chisqt,cfi,rmsea.ci,diff.chi2,diff.df,diff.cfi,diff.rmsea,stars,decision) %>%
  dplyr::mutate(diff.chi2=paste0(diff.chi2," (",diff.df,") ",stars)) %>%
  dplyr::select(model,chisqt,cfi,rmsea.ci,diff.chi2,diff.cfi,diff.rmsea,decision)


col.nam <- c("Model","&chi;^2 (df)","CFI","RMSEA (90 CI)",
             "&Delta; &chi;^2 (&Delta; df)","&Delta; CFI","&Delta; RMSEA","Decision")

tab.inv %>% 
  kableExtra::kable(format = "html",
                    align = "c",
                    booktabs = T,
                    escape = F,
                    caption = NULL,
                    col.names = col.nam) %>%
  kableExtra::kable_styling(full_width = T,
                            latex_options = "hold_position",
                            bootstrap_options=c("striped", "bordered", "condensed"),
                            font_size = 23) %>%
  kableExtra::column_spec(c(1,8), width = "3.5cm") %>% 
  kableExtra::column_spec(2:7, width = "4cm") %>% 
  kableExtra::column_spec(4, width = "5cm")
```



::::


# Discusión y conclusiones {data-background-color="#5f5758"}


## Discusión y conclusiones {data-background-color="#5f5758"}

:::: {.incremental style="font-size: 115%;"}

**<span style="color:darkorange">1. Agenda de medición sobre meritocracia**: escala presenta buenos indicadores de ajuste y sus dimensiones se corresponden con el modelo conceptual multidimensional en población escolar [@castillo_multidimensional_2023] </font>

**<span style="color:darkorange">2. Significado de la meritocracia**: tanto a nivel de estudiantes como adultos los factores se relacionan de manera similar → _a mayor percepción no meritocrática, mayor preferencia por la meritocracia_
</font>

**<span style="color:darkorange">3. Invarianza longitudinal**: no es posible asumir que los ítems tienen una relación consistente con el constructo en ambas olas de estudiantes [@liu_testing_2017]  → _cargas factoriales cambian en el tiempo_ 
</font>

::::


# ¡Gracias por su atención! 

-   **Github del proyecto:** <https://github.com/educacion-meritocracia>



## Referencias