---
title: "Medición de percepciones y preferencias sobre meritocracia en etapa escolar en Chile"
subtitle: "Análisis de datos"
author: "Andreas Laffert, Asistente de Investigación"
date: today
lang: es
fontsize: 14pt
format:
  html:
    toc: true
    toc-depth: 2
    toc-expand: 2
    toc-title: Contenidos
    number-sections: true
    number-depth: 3
    theme:
      light: journal
---

<style>
.logo {
    position: absolute;
    top: 15px;
    left: 30px;
}
</style>

<img class="logo" src="edumer.png" width="200" height="170">

<div style="text-align: justify">


```{r}
#| label: set
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)

```


# Librerías

```{r}
#| label: library
#| echo: false

if (!require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               sjmisc, 
               sjPlot,
               here,
               lavaan,
               psych,
               corrplot,
               semPlot,
               vtable,
               ggdist,
               patchwork,
               semTable)

options(scipen=999)
rm(list = ls())
```


# Datos

```{r}
#| label: data
#| echo: false
#| output: false

load(file = here("output", "data", "db_proc.RData"))

names(db)
glimpse(db)

```

# 3. Analísis


## Descriptivos

```{r}
#| label: tbl-summary
#| tbl-cap: "Estadísticos descriptivos"
#| tbl-cap-location: top

db <- db %>% select(-n_miss_all)

theme_set(theme_ggdist())

db %>% 
  psych::describe() %>% 
  as.data.frame() %>% 
  dplyr::select("Mean"=mean,"SD"=sd,"Min"=min,"Max"=max) %>% 
  round(.,2)

```


```{r}
#| label: fig-likert

a <- db %>% 
  select(starts_with("perc")) %>% 
  mutate_all(~ sjmisc::rec(., rec = "rev")) %>% 
  sjPlot::plot_likert(geom.colors = "RdBu",
                      title = c("a. Perceptions"),
                      geom.size = 0.8,
                      axis.labels = c("Effort", "Talent", "Rich Parents", "Contacts"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE
                      ) +
  ggplot2::theme(legend.position = "none")

b <- db %>% 
  select(starts_with("pref")) %>% 
  mutate_all(~ sjmisc::rec(., rec = "rev")) %>% 
  sjPlot::plot_likert(geom.colors = "RdBu",
                      title = c("b. Preferences"),
                      geom.size = 0.8,
                      axis.labels = c("Effort", "Talent", "Rich Parents", "Contacts"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE
  ) +
  ggplot2::theme(legend.position = "bottom")

likerplot <- a / b + plot_annotation(caption = paste0("Source: Authors calculations based on EDUMER data"," (n = ",dim(db)[1],")"
))

likerplot
```


## Bivariados

```{r}
#| label: fig-correlaciones

M <- psych::polychoric(db[c(1:8)])

diag(M$rho) <- NA

rownames(M$rho) <- c("A. Perception Effort",
                     "B. Perception Talent",
                     "C. Perception Rich Parents",
                     "D. Perception Contacts",
                     "E. Preferences Effort",
                     "F. Preferences Talent",
                     "G. Preferences Rich Parents",
                     "H. Preferences Contacts")

#set Column names of the matrix
colnames(M$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                       "(H)")

testp <- cor.mtest(M$rho, conf.level = 0.95)

#Plot the matrix using corrplot
corrplot::corrplot(M$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#E16462", "white", "#0D0887"))(12),
                   bg = "white",
                   na.label = "-")

```

## Multivariados

### CFA

```{r}
# model
model_cfa <- '
  perc_merit = ~ perc_effort + perc_talent
  perc_nmerit = ~ perc_rich_parents + perc_contact
  pref_merit = ~ pref_effort + pref_talent
  pref_nmerit = ~ pref_rich_parents + pref_contact
  '

# estimation for each order set

m1_cfa <- cfa(model = model_cfa, 
              data = db,
              estimator = "MLR", 
              std.lv = F) # Continuous/ estimator ML Robust

m2_cfa <- cfa(model = model_cfa, 
              data = db, 
              estimator = "DWLS",
              ordered = T,
              std.lv = F)

summary(m2_cfa, fit.measures = T, standardized = T, rsquare = T, modindices = T) 

```


### SEM

```{r}
# SEM
## Especificar el modelo: medición y estructural
m_sem1 <- '
# Modelo medición
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact

  # Modelo estructural
pref_redis ~  pref_merit + pref_nmerit
'

## Ajustar modelo
f_sem1 <- sem(m_sem1, data = db)

## Ver resultados completos
summary(f_sem1, fit.measures = T, standardized = T, 
        rsquare = T, modindices = T)

semTable(f_sem1, type = "html", columns = c ("est" , "estsestars"),
         paramSets = "all")
```

